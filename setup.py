#!/usr/bin/env python3
"""
Script universel de configuration de l'environnement virtuel Python
D√©tecte automatiquement le syst√®me d'exploitation et lance le script appropri√©
"""

import os
import sys
import platform
import subprocess

def detect_os():
    """D√©tecte le syst√®me d'exploitation"""
    system = platform.system().lower()
    return system

def run_setup_script():
    """Lance le script de configuration appropri√© selon l'OS"""
    os_type = detect_os()
    
    print("üîç D√©tection du syst√®me d'exploitation...")
    print(f"‚úÖ Syst√®me d√©tect√©: {platform.system()} {platform.release()}")
    print()
    
    if os_type in ['linux', 'darwin']:  # Linux ou macOS
        script_name = "setup_env.sh"
        print(f"üöÄ Lancement du script Unix/Mac: {script_name}")
        
        # Rendre le script ex√©cutable
        try:
            os.chmod(script_name, 0o755)
        except OSError:
            pass
        
        # Ex√©cuter le script
        try:
            result = subprocess.run(['bash', script_name], check=True)
            return result.returncode == 0
        except subprocess.CalledProcessError as e:
            print(f"‚ùå Erreur lors de l'ex√©cution du script: {e}")
            return False
        except FileNotFoundError:
            print(f"‚ùå Script {script_name} non trouv√©")
            return False
            
    elif os_type == 'windows':
        script_name = "setup_env.bat"
        print(f"üöÄ Lancement du script Windows: {script_name}")
        
        # Ex√©cuter le script batch
        try:
            result = subprocess.run([script_name], shell=True, check=True)
            return result.returncode == 0
        except subprocess.CalledProcessError as e:
            print(f"‚ùå Erreur lors de l'ex√©cution du script: {e}")
            return False
        except FileNotFoundError:
            print(f"‚ùå Script {script_name} non trouv√©")
            return False
    else:
        print(f"‚ùå Syst√®me d'exploitation non support√©: {os_type}")
        print("üí° Syst√®mes support√©s: Windows, macOS, Linux")
        return False

def main():
    """Fonction principale"""
    print("üéÆ Configuration automatique de l'environnement - Jeu de la Vie de Conway")
    print("=" * 70)
    print()
    
    success = run_setup_script()
    
    print()
    if success:
        print("üéâ Configuration termin√©e avec succ√®s!")
        print()
        print("üìù Prochaines √©tapes:")
        if detect_os() == 'windows':
            print("   1. Pour activer l'environnement: venv\\Scripts\\activate.bat")
        else:
            print("   1. Pour activer l'environnement: source venv/bin/activate")
        print("   2. Pour lancer le jeu: python main.py")
    else:
        print("‚ùå La configuration a √©chou√©")
        print("üí° V√©rifiez que Python est install√© et accessible")
        return 1
    
    return 0

if __name__ == "__main__":
    sys.exit(main()) 